%YAML:1.0

#common parameters
imu_topic: "/imu0"
image_topic: "/cam0/image_raw"
output_path: "/config/phab2pro/vins_result.csv"         # vins outputs will be wrttento vins_folder_path + output_path

# MEI is better than PINHOLE for large FOV camera
model_type: MEI
camera_name: camera
image_width: 640
image_height: 480
mirror_parameters:
    xi: 1.7672592510347997
distortion_parameters:
    k1: -0.14761391761133535 
    k2: 0.6869792387870324
    p1: 0.0025369377239102572
    p2: 0.0010842595833437199
projection_parameters:
    gamma1: 779.3961499129437
    gamma2: 778.6606094233045
    u0: 312.95969501412003
    v0: 239.3234246476927

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/config/euroc/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.00064477,  0.99999904, -0.001227661,
           0.99999979, -0.00064471,  0.000047418,
           0.00004663, -0.00122769, -0.999999245 ]


#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [ 0.0051647310998233, -0.009813236291345714,  0.007155657406506395]

#feature traker paprameters

max_cnt: 150 #150            # max feature number in feature tracking
min_dist: 25 #25            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
#F_threshold: 1.0        # ransac threshold (pixel)
F_threshold: 0.5
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 1              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points
gpu: 0                  # cuda accelerate feature tracker
blur: 0                 # image bilateralFilter
#optimization parameters

stereo_track: 0

max_solver_time: 0.035  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
#keyframe_parallax: 10.0 # keyframe selection threshold (pixel)
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#accl scale:0.000244*9.8  = 0.0023912 m/s^2
#gyro scale:0.061035/57.3 = 0.001065183 rad/s

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 0.8     #温漂补偿、减去偏置、轴对齐后(9.16,9.53,15.31) 转换单位(0.022,0.023,0.037)
                #datasheet 300ug/sqr(HZ),即0.00294 m/s^2/sqr(HZ)
acc_n: 0.1  #这里放大5~10倍，否则静止时会漂
#acc_n: 0.1  #miniI5
acc_n_x: 0.11  #0.022,这里取了5倍
acc_n_y: 0.115 #0.023
acc_n_z: 0.185  #0.037

#gyr_n: 0.0015  #温漂补偿、减去偏置、轴对齐后(1.12,1.18,0.89)  转换单位(0.0012,0.0013,0.00095)
               #datasheet 0.01 deg/s/sqr(HZ),即0.00017452 rad/s/sqr(HZ)
gyr_n: 0.0001752
gyr_n_x: 0.0012 #0.0012
gyr_n_y: 0.0013 #0.0013
gyr_n_z: 0.00095 #0.001

acc_w: 0.002  #(0.557,0.472,1.021) 转换单位(0.0014,0.0012,0.0025) 　　　
#acc_w: 0.1 #miniI5
acc_w_x: 0.0014 #0.007  #放大5~10倍
acc_w_y: 0.0012 #0.005
acc_w_z: 0.0025 #0.01

gyr_w: 6e-5  #温漂补偿、减去偏置、轴对齐后(0.052,0.138,0.061)  转换单位(5.5e-5,1.5e-4,6.6e-5)
gyr_w_x: 5.5e-5
gyr_w_y: 1.5e-4
gyr_w_z: 6.6e-5
g_norm: 9.8

#acc_n: 0.2          # accelerometer measurement noise standard deviation. 250µg/√Hz  0.00294m/s^2
#gyr_n: 0.001752     # gyroscope measurement noise standard deviation. 0.01º/s/√Hz,0.00017452 rad/s
#acc_w: 0.0002       # accelerometer bias random work noise standard deviation. 0.0014 m/s^2
#gyr_w: 6e-5         # gyroscope bias random work noise standard deviation. 1.5e-5 rad/s
#g_norm: 9.8

#acc_n acc_w all set 0.1,the result is good on intel miniI5

#loop closure parameters
loop_closure: 1    #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
                     #also give the camera calibration file same as feature_tracker node
pattern_file: "/support_files/brief_pattern.yml"
voc_file: "/support_files/brief_k10L6.bin"
min_loop_num: 20
