%YAML:1.0

#common parameters
imu_topic: "/imu0"
image_topic: "/cam1/image_raw"
output_path: "/config/fisheye7251/vins_result.csv"         # vins outputs will be wrttento vins_folder_path + output_path

# MEI is better than PINHOLE for large FOV camera
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
distortion_parameters:
   k1: -8.3268455622938966e-03
   k2: -1.1685219223627509e-02
   p1: -9.5807533020880666e-04
   p2: 9.8568417555203774e-05
projection_parameters:
   fx: 2.4664995043391275e+02
   fy: 2.4565770249151711e+02
   cx: 3.1944897928801254e+02
   cy: 2.5892217840437519e+02

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/config/euroc/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.88734556, -0.45911375, -0.04280691,
          -0.4566301,  -0.88784146,  0.05680232,
          -0.06408448, -0.03085636, -0.99746733 ]   

#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [ 0.06466819, 0.04606814, 0.0088115 ]

#feature traker paprameters

max_cnt: 150            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points
#optimization parameters

max_solver_time: 0.035  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.015          # accelerometer measurement noise standard deviation.
gyr_n: 0.054         # gyroscope measurement noise standard deviation.
acc_w: 0.11        # accelerometer bias random work noise standard deviation.
gyr_w: 2.0e-3       # gyroscope bias random work noise standard deviation.
g_norm: 9.76       #


#loop closure parameters
loop_closure: 1   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
                     #also give the camera calibration file same as feature_tracker node
pattern_file: "/support_files/brief_pattern.yml"
voc_file: "/support_files/brief_k10L6.bin"
min_loop_num: 20
